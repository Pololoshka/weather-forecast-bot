import enum
from datetime import datetime

from src.services.db.models import City
from src.services.weather.const import WEATHER_CODES
from src.services.weather.models import CurrentWeather, WeatherOnDay


class Command(enum.StrEnum):
    start = "start"


class Text:
    add_city = "üåç –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥"
    choose_city = "üåâ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥"
    now = "‚úîÔ∏è –°–µ–π—á–∞—Å"
    one_day = "‚úîÔ∏è –ù–∞ 1 –¥–µ–Ω—å"
    three_days = "‚úîÔ∏è –ù–∞ 3 –¥–Ω—è"
    seven_days = "‚úîÔ∏è –ù–∞ 7 –¥–Ω–µ–π"
    fourteen_days = "‚úîÔ∏è –ù–∞ 14 –¥–Ω–µ–π"
    delete = "üóë –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞\n(–æ—Å—Ç–∞–≤–ª—é 4 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≥–æ—Ä–æ–¥–∞)"
    start = (
        "–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥ü§ö\n–Ø —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –∑–∞ –æ–∫–Ω–æ–º üå¶\n"
        "–°–Ω–∏–∑—É —Ç—ã –≤–∏–¥–∏—à—å –∫–Ω–æ–ø–∫–∏ —Å –≥–æ—Ä–æ–¥–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Ä–∞–Ω—å—à–µ –¥–æ–±–∞–≤–ª—è–ª üëá "
        "–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –¥–ª—è —Ç–µ–±—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≥–æ—Ä–æ–¥ –∞–∫—Ç—É–∞–ª–µ–Ω."
        "–ï—Å–ª–∏ —Ç—ã –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Ç–æ –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥ üåç"
    )
    input_new_city = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞‚úíÔ∏è"
    wrong_city = "T–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ü§∑\n –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ ü§î"
    choose_or_add = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π üëá "
    incomprehension = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–º–∏–Ω–∞—é ü§∑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∫–Ω–æ–ø–∫–∞–º –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ üëá"
    no_preferred_city = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚úñÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥üåá"
    after_delete = (
        "–Ø –ø–æ—á–∏—Å—Ç–∏–ª –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞ –∏ –æ—Å—Ç–∞–≤–∏–ª 4 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≥–æ—Ä–æ–¥–∞. "
        "–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã üëá"
    )
    exc_geolocation = "–°–µ—Ä–≤–µ—Ä –ø–æ–∏—Å–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ‚úñÔ∏è"
    exc_weather = "–°–µ—Ä–≤–µ—Ä –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç ‚úñÔ∏è"

    city_template = "{city} ({country}, {district})"
    city_regex = r"(?P<city>.+) \((?P<country>.+), (?P<district>.+)\)"

    @staticmethod
    def message_exc(err: str) -> str:
        return f"–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü´£\n{err}\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ üëá"

    @classmethod
    def text_button_with_city(cls, city: City) -> str:
        return cls.city_template.format(
            city=city.name.title(),
            country=city.country,
            district=city.district,
        )

    @classmethod
    def text_selected_city(cls, city: City) -> str:
        return (
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥ {cls.text_button_with_city(city)} üåÉ\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ, –∑–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ üìÖ"
        )

    @staticmethod
    def text_current_weather(
        date: datetime,
        city: City,
        current_weather: CurrentWeather,
    ) -> str:
        return (
            f"–°–µ–π—á–∞—Å {date.strftime('%H:%M %d.%m.%Y')} "
            f"–≤ –≥–æ—Ä–æ–¥–µ {city.name.title()} {int(current_weather.temp)}¬∞ üåá\n"
            f"{WEATHER_CODES[current_weather.condition][city.language]}"
        )

    @staticmethod
    def text_weather_today(city: City, day: WeatherOnDay) -> str:
        return (
            f"–°–µ–≥–æ–¥–Ω—è {day.date.strftime('%d.%m.%Y')} –≤ –≥–æ—Ä–æ–¥–µ {city.name.title()} üåá\n"
            f"–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {int(day.temp_max)}¬∞, –∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è {int(day.temp_min)}¬∞.\n"
            f"{WEATHER_CODES[day.condition][city.language]}"
        )

    @staticmethod
    def text_weather_for_few_days(city: City, day: WeatherOnDay) -> str:
        return (
            f"‚Ä¢ {day.date.strftime('%d.%m.%Y')} –≤ –≥–æ—Ä–æ–¥–µ {city.name.title()} üåá\n"
            f"–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {int(day.temp_max)}¬∞, –∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è {int(day.temp_min)}¬∞.\n"
            f"{WEATHER_CODES[day.condition][city.language]}"
        )

    @staticmethod
    def text_with_new_cities(city_name: str) -> str:
        return (
            f"–ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –≥–æ—Ä–æ–¥–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {city_name.title()}."
            f"–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç üëá"
        )


class MessageType(enum.StrEnum):
    text = "text"
    any = "any"
