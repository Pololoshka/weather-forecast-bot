[tool.poetry]
name = "weather-forecast"
version = "0.1.0"
description = ""
authors = ["Pololoshka <sokolova.polya.98@gmail.com>"]
readme = "README.md"
packages = [{ include = "weather_forecast" }]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.31.0"
bs4 = "^0.0.1"
sqlalchemy = "^2.0"
python-dotenv = "^1.0.0"
psycopg = { extras = ["binary", "pool"], version = "^3.1" }
alembic = "^1.11"
pytelegrambotapi = "^4.14.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
requests-mock = "^1.11.0"
freezegun = "^1.2.2"
types-requests = "*"
pytest-mock = "^3.12.0"
# Linters and Formatters
black = "*"
ruff = "*"
pre-commit = "*"
mypy = "*"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers"

[tool.coverage.run]
branch = true
source = [
    "./src/",
]
omit = [
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if not logging",
    "if name == .main.:",
    "if .*TYPE_CHECKING:"
]

[tool.mypy]
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py312"
extend-exclude = [".venv"]
line-length = 100

# https://docs.astral.sh/ruff/rules/#error-e
select = [
  "E",   # Error
  "F",   # Pyflakes
  "I",   # Isort
  "N",   # pep8-naming
  "S",   # flake8-bandit
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "ICN", # flake8-import-conventions
  "PIE", # flake8-pie
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "SIM", # flake8-simplify
  "C90", # mccabe for complexicty
  "UP",  # pyupgrade
  "T20", # flake8-print
]
ignore = [
  "N805", # First argument of a method should be named self
]

[tool.ruff.extend-per-file-ignores]
"test*" = [
  "S101", # Allow use of asserts
]

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.mccabe]
max-complexity = 8
